_G.autoFuse = true

local PET_TO_FUSE = "Penguin" -- name of the pet you want to fuse
local FUSE_AMOUNT = 3 -- amount to put into daycare (3 is the minimum)
local IS_SHINY = false
local PET_TYPE = 0 -- change to 2 for Rainbow, 1 for Golden, or 0 for Normal
-- MAKE PET TYPES TO FUSE

local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Library = ReplicatedStorage:WaitForChild("Library")
local LocalPlayer = game:GetService("Players").LocalPlayer

local pets = require(Library).Save.Get().Inventory.Pet

local petId
for id, petData in pairs(pets) do
    if petData["id"] == PET_TO_FUSE then
        print("Found pet:")
        if tonumber(petData["pt"]) == PET_TYPE then
            if IS_SHINY then
                if petData["sh"] then
                    petId = id
                    break
                end
            else
                if not petData["sh"] then
                    petId = id
                    break
                end
            end
        else
            petId = id
        end
    end
end

if not petId then
    print("Pet not found")
    return
else
    print("Found pet: " .. petId)
end

-- Teleport to a specific location before starting the fusion process
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(669.301819, 16.9711342, 1074.6239)

while _G.autoFuse do
    local args = {
        [1] = {
            [petId] = FUSE_AMOUNT
        }
    }

    game:GetService("ReplicatedStorage").Network.FuseMachine_Activate:InvokeServer(unpack(args))
    task.wait()
end
